// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opnsense

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Dns_host_override struct {
	pulumi.CustomResourceState

	Domain pulumi.StringOutput `pulumi:"domain"`
	Host   pulumi.StringOutput `pulumi:"host"`
	Ip     pulumi.StringOutput `pulumi:"ip"`
	Type   pulumi.StringOutput `pulumi:"type"`
}

// NewDns_host_override registers a new resource with the given unique name, arguments, and options.
func NewDns_host_override(ctx *pulumi.Context,
	name string, args *Dns_host_overrideArgs, opts ...pulumi.ResourceOption) (*Dns_host_override, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.Host == nil {
		return nil, errors.New("invalid value for required argument 'Host'")
	}
	if args.Ip == nil {
		return nil, errors.New("invalid value for required argument 'Ip'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Dns_host_override
	err := ctx.RegisterResource("opnsense:index/dns_host_override:dns_host_override", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDns_host_override gets an existing Dns_host_override resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDns_host_override(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Dns_host_overrideState, opts ...pulumi.ResourceOption) (*Dns_host_override, error) {
	var resource Dns_host_override
	err := ctx.ReadResource("opnsense:index/dns_host_override:dns_host_override", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dns_host_override resources.
type dns_host_overrideState struct {
	Domain *string `pulumi:"domain"`
	Host   *string `pulumi:"host"`
	Ip     *string `pulumi:"ip"`
	Type   *string `pulumi:"type"`
}

type Dns_host_overrideState struct {
	Domain pulumi.StringPtrInput
	Host   pulumi.StringPtrInput
	Ip     pulumi.StringPtrInput
	Type   pulumi.StringPtrInput
}

func (Dns_host_overrideState) ElementType() reflect.Type {
	return reflect.TypeOf((*dns_host_overrideState)(nil)).Elem()
}

type dns_host_overrideArgs struct {
	Domain string `pulumi:"domain"`
	Host   string `pulumi:"host"`
	Ip     string `pulumi:"ip"`
	Type   string `pulumi:"type"`
}

// The set of arguments for constructing a Dns_host_override resource.
type Dns_host_overrideArgs struct {
	Domain pulumi.StringInput
	Host   pulumi.StringInput
	Ip     pulumi.StringInput
	Type   pulumi.StringInput
}

func (Dns_host_overrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dns_host_overrideArgs)(nil)).Elem()
}

type Dns_host_overrideInput interface {
	pulumi.Input

	ToDns_host_overrideOutput() Dns_host_overrideOutput
	ToDns_host_overrideOutputWithContext(ctx context.Context) Dns_host_overrideOutput
}

func (*Dns_host_override) ElementType() reflect.Type {
	return reflect.TypeOf((**Dns_host_override)(nil)).Elem()
}

func (i *Dns_host_override) ToDns_host_overrideOutput() Dns_host_overrideOutput {
	return i.ToDns_host_overrideOutputWithContext(context.Background())
}

func (i *Dns_host_override) ToDns_host_overrideOutputWithContext(ctx context.Context) Dns_host_overrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Dns_host_overrideOutput)
}

// Dns_host_overrideArrayInput is an input type that accepts Dns_host_overrideArray and Dns_host_overrideArrayOutput values.
// You can construct a concrete instance of `Dns_host_overrideArrayInput` via:
//
//	Dns_host_overrideArray{ Dns_host_overrideArgs{...} }
type Dns_host_overrideArrayInput interface {
	pulumi.Input

	ToDns_host_overrideArrayOutput() Dns_host_overrideArrayOutput
	ToDns_host_overrideArrayOutputWithContext(context.Context) Dns_host_overrideArrayOutput
}

type Dns_host_overrideArray []Dns_host_overrideInput

func (Dns_host_overrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Dns_host_override)(nil)).Elem()
}

func (i Dns_host_overrideArray) ToDns_host_overrideArrayOutput() Dns_host_overrideArrayOutput {
	return i.ToDns_host_overrideArrayOutputWithContext(context.Background())
}

func (i Dns_host_overrideArray) ToDns_host_overrideArrayOutputWithContext(ctx context.Context) Dns_host_overrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Dns_host_overrideArrayOutput)
}

// Dns_host_overrideMapInput is an input type that accepts Dns_host_overrideMap and Dns_host_overrideMapOutput values.
// You can construct a concrete instance of `Dns_host_overrideMapInput` via:
//
//	Dns_host_overrideMap{ "key": Dns_host_overrideArgs{...} }
type Dns_host_overrideMapInput interface {
	pulumi.Input

	ToDns_host_overrideMapOutput() Dns_host_overrideMapOutput
	ToDns_host_overrideMapOutputWithContext(context.Context) Dns_host_overrideMapOutput
}

type Dns_host_overrideMap map[string]Dns_host_overrideInput

func (Dns_host_overrideMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Dns_host_override)(nil)).Elem()
}

func (i Dns_host_overrideMap) ToDns_host_overrideMapOutput() Dns_host_overrideMapOutput {
	return i.ToDns_host_overrideMapOutputWithContext(context.Background())
}

func (i Dns_host_overrideMap) ToDns_host_overrideMapOutputWithContext(ctx context.Context) Dns_host_overrideMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Dns_host_overrideMapOutput)
}

type Dns_host_overrideOutput struct{ *pulumi.OutputState }

func (Dns_host_overrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Dns_host_override)(nil)).Elem()
}

func (o Dns_host_overrideOutput) ToDns_host_overrideOutput() Dns_host_overrideOutput {
	return o
}

func (o Dns_host_overrideOutput) ToDns_host_overrideOutputWithContext(ctx context.Context) Dns_host_overrideOutput {
	return o
}

func (o Dns_host_overrideOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *Dns_host_override) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

func (o Dns_host_overrideOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *Dns_host_override) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

func (o Dns_host_overrideOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *Dns_host_override) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

func (o Dns_host_overrideOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Dns_host_override) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type Dns_host_overrideArrayOutput struct{ *pulumi.OutputState }

func (Dns_host_overrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Dns_host_override)(nil)).Elem()
}

func (o Dns_host_overrideArrayOutput) ToDns_host_overrideArrayOutput() Dns_host_overrideArrayOutput {
	return o
}

func (o Dns_host_overrideArrayOutput) ToDns_host_overrideArrayOutputWithContext(ctx context.Context) Dns_host_overrideArrayOutput {
	return o
}

func (o Dns_host_overrideArrayOutput) Index(i pulumi.IntInput) Dns_host_overrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Dns_host_override {
		return vs[0].([]*Dns_host_override)[vs[1].(int)]
	}).(Dns_host_overrideOutput)
}

type Dns_host_overrideMapOutput struct{ *pulumi.OutputState }

func (Dns_host_overrideMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Dns_host_override)(nil)).Elem()
}

func (o Dns_host_overrideMapOutput) ToDns_host_overrideMapOutput() Dns_host_overrideMapOutput {
	return o
}

func (o Dns_host_overrideMapOutput) ToDns_host_overrideMapOutputWithContext(ctx context.Context) Dns_host_overrideMapOutput {
	return o
}

func (o Dns_host_overrideMapOutput) MapIndex(k pulumi.StringInput) Dns_host_overrideOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Dns_host_override {
		return vs[0].(map[string]*Dns_host_override)[vs[1].(string)]
	}).(Dns_host_overrideOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Dns_host_overrideInput)(nil)).Elem(), &Dns_host_override{})
	pulumi.RegisterInputType(reflect.TypeOf((*Dns_host_overrideArrayInput)(nil)).Elem(), Dns_host_overrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Dns_host_overrideMapInput)(nil)).Elem(), Dns_host_overrideMap{})
	pulumi.RegisterOutputType(Dns_host_overrideOutput{})
	pulumi.RegisterOutputType(Dns_host_overrideArrayOutput{})
	pulumi.RegisterOutputType(Dns_host_overrideMapOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opnsense

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Dhcp_static_map struct {
	pulumi.CustomResourceState

	Hostname  pulumi.StringPtrOutput `pulumi:"hostname"`
	Interface pulumi.StringOutput    `pulumi:"interface"`
	Ipaddr    pulumi.StringOutput    `pulumi:"ipaddr"`
	Mac       pulumi.StringOutput    `pulumi:"mac"`
}

// NewDhcp_static_map registers a new resource with the given unique name, arguments, and options.
func NewDhcp_static_map(ctx *pulumi.Context,
	name string, args *Dhcp_static_mapArgs, opts ...pulumi.ResourceOption) (*Dhcp_static_map, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Interface == nil {
		return nil, errors.New("invalid value for required argument 'Interface'")
	}
	if args.Ipaddr == nil {
		return nil, errors.New("invalid value for required argument 'Ipaddr'")
	}
	if args.Mac == nil {
		return nil, errors.New("invalid value for required argument 'Mac'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Dhcp_static_map
	err := ctx.RegisterResource("opnsense:index/dhcp_static_map:dhcp_static_map", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDhcp_static_map gets an existing Dhcp_static_map resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDhcp_static_map(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Dhcp_static_mapState, opts ...pulumi.ResourceOption) (*Dhcp_static_map, error) {
	var resource Dhcp_static_map
	err := ctx.ReadResource("opnsense:index/dhcp_static_map:dhcp_static_map", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dhcp_static_map resources.
type dhcp_static_mapState struct {
	Hostname  *string `pulumi:"hostname"`
	Interface *string `pulumi:"interface"`
	Ipaddr    *string `pulumi:"ipaddr"`
	Mac       *string `pulumi:"mac"`
}

type Dhcp_static_mapState struct {
	Hostname  pulumi.StringPtrInput
	Interface pulumi.StringPtrInput
	Ipaddr    pulumi.StringPtrInput
	Mac       pulumi.StringPtrInput
}

func (Dhcp_static_mapState) ElementType() reflect.Type {
	return reflect.TypeOf((*dhcp_static_mapState)(nil)).Elem()
}

type dhcp_static_mapArgs struct {
	Hostname  *string `pulumi:"hostname"`
	Interface string  `pulumi:"interface"`
	Ipaddr    string  `pulumi:"ipaddr"`
	Mac       string  `pulumi:"mac"`
}

// The set of arguments for constructing a Dhcp_static_map resource.
type Dhcp_static_mapArgs struct {
	Hostname  pulumi.StringPtrInput
	Interface pulumi.StringInput
	Ipaddr    pulumi.StringInput
	Mac       pulumi.StringInput
}

func (Dhcp_static_mapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dhcp_static_mapArgs)(nil)).Elem()
}

type Dhcp_static_mapInput interface {
	pulumi.Input

	ToDhcp_static_mapOutput() Dhcp_static_mapOutput
	ToDhcp_static_mapOutputWithContext(ctx context.Context) Dhcp_static_mapOutput
}

func (*Dhcp_static_map) ElementType() reflect.Type {
	return reflect.TypeOf((**Dhcp_static_map)(nil)).Elem()
}

func (i *Dhcp_static_map) ToDhcp_static_mapOutput() Dhcp_static_mapOutput {
	return i.ToDhcp_static_mapOutputWithContext(context.Background())
}

func (i *Dhcp_static_map) ToDhcp_static_mapOutputWithContext(ctx context.Context) Dhcp_static_mapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Dhcp_static_mapOutput)
}

// Dhcp_static_mapArrayInput is an input type that accepts Dhcp_static_mapArray and Dhcp_static_mapArrayOutput values.
// You can construct a concrete instance of `Dhcp_static_mapArrayInput` via:
//
//	Dhcp_static_mapArray{ Dhcp_static_mapArgs{...} }
type Dhcp_static_mapArrayInput interface {
	pulumi.Input

	ToDhcp_static_mapArrayOutput() Dhcp_static_mapArrayOutput
	ToDhcp_static_mapArrayOutputWithContext(context.Context) Dhcp_static_mapArrayOutput
}

type Dhcp_static_mapArray []Dhcp_static_mapInput

func (Dhcp_static_mapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Dhcp_static_map)(nil)).Elem()
}

func (i Dhcp_static_mapArray) ToDhcp_static_mapArrayOutput() Dhcp_static_mapArrayOutput {
	return i.ToDhcp_static_mapArrayOutputWithContext(context.Background())
}

func (i Dhcp_static_mapArray) ToDhcp_static_mapArrayOutputWithContext(ctx context.Context) Dhcp_static_mapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Dhcp_static_mapArrayOutput)
}

// Dhcp_static_mapMapInput is an input type that accepts Dhcp_static_mapMap and Dhcp_static_mapMapOutput values.
// You can construct a concrete instance of `Dhcp_static_mapMapInput` via:
//
//	Dhcp_static_mapMap{ "key": Dhcp_static_mapArgs{...} }
type Dhcp_static_mapMapInput interface {
	pulumi.Input

	ToDhcp_static_mapMapOutput() Dhcp_static_mapMapOutput
	ToDhcp_static_mapMapOutputWithContext(context.Context) Dhcp_static_mapMapOutput
}

type Dhcp_static_mapMap map[string]Dhcp_static_mapInput

func (Dhcp_static_mapMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Dhcp_static_map)(nil)).Elem()
}

func (i Dhcp_static_mapMap) ToDhcp_static_mapMapOutput() Dhcp_static_mapMapOutput {
	return i.ToDhcp_static_mapMapOutputWithContext(context.Background())
}

func (i Dhcp_static_mapMap) ToDhcp_static_mapMapOutputWithContext(ctx context.Context) Dhcp_static_mapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Dhcp_static_mapMapOutput)
}

type Dhcp_static_mapOutput struct{ *pulumi.OutputState }

func (Dhcp_static_mapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Dhcp_static_map)(nil)).Elem()
}

func (o Dhcp_static_mapOutput) ToDhcp_static_mapOutput() Dhcp_static_mapOutput {
	return o
}

func (o Dhcp_static_mapOutput) ToDhcp_static_mapOutputWithContext(ctx context.Context) Dhcp_static_mapOutput {
	return o
}

func (o Dhcp_static_mapOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Dhcp_static_map) pulumi.StringPtrOutput { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o Dhcp_static_mapOutput) Interface() pulumi.StringOutput {
	return o.ApplyT(func(v *Dhcp_static_map) pulumi.StringOutput { return v.Interface }).(pulumi.StringOutput)
}

func (o Dhcp_static_mapOutput) Ipaddr() pulumi.StringOutput {
	return o.ApplyT(func(v *Dhcp_static_map) pulumi.StringOutput { return v.Ipaddr }).(pulumi.StringOutput)
}

func (o Dhcp_static_mapOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v *Dhcp_static_map) pulumi.StringOutput { return v.Mac }).(pulumi.StringOutput)
}

type Dhcp_static_mapArrayOutput struct{ *pulumi.OutputState }

func (Dhcp_static_mapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Dhcp_static_map)(nil)).Elem()
}

func (o Dhcp_static_mapArrayOutput) ToDhcp_static_mapArrayOutput() Dhcp_static_mapArrayOutput {
	return o
}

func (o Dhcp_static_mapArrayOutput) ToDhcp_static_mapArrayOutputWithContext(ctx context.Context) Dhcp_static_mapArrayOutput {
	return o
}

func (o Dhcp_static_mapArrayOutput) Index(i pulumi.IntInput) Dhcp_static_mapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Dhcp_static_map {
		return vs[0].([]*Dhcp_static_map)[vs[1].(int)]
	}).(Dhcp_static_mapOutput)
}

type Dhcp_static_mapMapOutput struct{ *pulumi.OutputState }

func (Dhcp_static_mapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Dhcp_static_map)(nil)).Elem()
}

func (o Dhcp_static_mapMapOutput) ToDhcp_static_mapMapOutput() Dhcp_static_mapMapOutput {
	return o
}

func (o Dhcp_static_mapMapOutput) ToDhcp_static_mapMapOutputWithContext(ctx context.Context) Dhcp_static_mapMapOutput {
	return o
}

func (o Dhcp_static_mapMapOutput) MapIndex(k pulumi.StringInput) Dhcp_static_mapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Dhcp_static_map {
		return vs[0].(map[string]*Dhcp_static_map)[vs[1].(string)]
	}).(Dhcp_static_mapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Dhcp_static_mapInput)(nil)).Elem(), &Dhcp_static_map{})
	pulumi.RegisterInputType(reflect.TypeOf((*Dhcp_static_mapArrayInput)(nil)).Elem(), Dhcp_static_mapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Dhcp_static_mapMapInput)(nil)).Elem(), Dhcp_static_mapMap{})
	pulumi.RegisterOutputType(Dhcp_static_mapOutput{})
	pulumi.RegisterOutputType(Dhcp_static_mapArrayOutput{})
	pulumi.RegisterOutputType(Dhcp_static_mapMapOutput{})
}

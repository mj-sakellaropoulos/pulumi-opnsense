// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Opnsense
{
    [OpnsenseResourceType("opnsense:index/dns_host_override:dns_host_override")]
    public partial class Dns_host_override : global::Pulumi.CustomResource
    {
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        [Output("host")]
        public Output<string> Host { get; private set; } = null!;

        [Output("ip")]
        public Output<string> Ip { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Dns_host_override resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Dns_host_override(string name, Dns_host_overrideArgs args, CustomResourceOptions? options = null)
            : base("opnsense:index/dns_host_override:dns_host_override", name, args ?? new Dns_host_overrideArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Dns_host_override(string name, Input<string> id, Dns_host_overrideState? state = null, CustomResourceOptions? options = null)
            : base("opnsense:index/dns_host_override:dns_host_override", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/mj-sakellaropoulos/pulumi-opnsense",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Dns_host_override resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Dns_host_override Get(string name, Input<string> id, Dns_host_overrideState? state = null, CustomResourceOptions? options = null)
        {
            return new Dns_host_override(name, id, state, options);
        }
    }

    public sealed class Dns_host_overrideArgs : global::Pulumi.ResourceArgs
    {
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        [Input("ip", required: true)]
        public Input<string> Ip { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public Dns_host_overrideArgs()
        {
        }
        public static new Dns_host_overrideArgs Empty => new Dns_host_overrideArgs();
    }

    public sealed class Dns_host_overrideState : global::Pulumi.ResourceArgs
    {
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("ip")]
        public Input<string>? Ip { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public Dns_host_overrideState()
        {
        }
        public static new Dns_host_overrideState Empty => new Dns_host_overrideState();
    }
}
